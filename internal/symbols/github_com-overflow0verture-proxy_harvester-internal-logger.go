// Code generated by 'yaegi extract github.com/overflow0verture/proxy_harvester/internal/logger'. DO NOT EDIT.

package symbols

import (
	"github.com/overflow0verture/proxy_harvester/internal/logger"
	"reflect"
)

func init() {
	Symbols["github.com/overflow0verture/proxy_harvester/internal/logger/logger"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Close":             reflect.ValueOf(logger.Close),
		"CreateCustomStyle": reflect.ValueOf(logger.CreateCustomStyle),
		"Debug":             reflect.ValueOf(logger.Debug),
		"EnableTrueColor":   reflect.ValueOf(logger.EnableTrueColor),
		"Error":             reflect.ValueOf(logger.Error),
		"GetColorLevel":     reflect.ValueOf(logger.GetColorLevel),
		"GetColorSupport":   reflect.ValueOf(logger.GetColorSupport),
		"IPSummary":         reflect.ValueOf(logger.IPSummary),
		"IPSummaryInterval": reflect.ValueOf(&logger.IPSummaryInterval).Elem(),
		"Info":              reflect.ValueOf(logger.Info),
		"Plugin":            reflect.ValueOf(logger.Plugin),
		"PrintColored":      reflect.ValueOf(logger.PrintColored),
		"ProxyPool":         reflect.ValueOf(logger.ProxyPool),
		"SetColorSupport":   reflect.ValueOf(logger.SetColorSupport),
		"Setup":             reflect.ValueOf(logger.Setup),
		"Success":           reflect.ValueOf(logger.Success),
		"Warning":           reflect.ValueOf(logger.Warning),
	}
}
